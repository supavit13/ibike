<script>
    var area;
    var arrayArea = [];
    var mymap = L.map('map', {
        center: new L.LatLng(13.1192, 100.92066),
        zoom: 16,
        measureControl: true
    });
    var polygon = [[21.22794, 90.79102], [3.73271, 90.79102], [4.82826, 115.00488], [21.30985, 115.00488]];

    var json = '<%- JSON.stringify(zone) %>';
    window.onload = function () {
        if (json == '') {
            location.reload();
        }
    };

    var dbzone = JSON.parse(json);
    dbzone = dbzone[0]['zone'];
    var setArea = L.polygon(dbzone).addTo(mymap);
    setArea.setStyle({ "fillOpacity": 0, color: 'red' });
    mymap.setMaxBounds(polygon);



    L.gridLayer.googleMutant({
        minZoom: 6,
        type: 'roadmap' // valid values are 'roadmap', 'satellite', 'terrain' and 'hybrid'
    }).addTo(mymap);

    // var greenIcon = new LeafIcon({iconUrl: '/images/markar.png'});
    mymap.addControl(L.control.locate({
        // iconUrl: '/images/markar.png',
        locateOptions: {
            enableHighAccuracy: true
        },
        position : 'bottomright'
    }));
    mymap.zoomControl.setPosition('bottomright');
    mymap.measureControl.setPosition('bottomleft');




    var greenIcon = L.icon({
        iconUrl: '/images/rsz_blue.png',
        // shadowUrl: 'leaf-shadow.png',
        iconSize: [42, 94], // size of the icon
    });
    var userIcon = L.icon({
        iconUrl: '/images/user50x50.png',
        iconSize: [50, 50], // size of the icon
    });

    var mylat;
    var mylng;
    var current_position, current_accuracy;

    function onLocationFound(e) {
        // if position defined, then remove the existing position marker and accuracy circle from the map
        if (current_position) {
            mymap.removeLayer(current_position);
            // mymap.removeLayer(current_accuracy);
        }

        var radius = e.accuracy / 2;

        mylat = e.latlng.lat;
        mylng = e.latlng.lng;
        current_position = L.marker(e.latlng, { icon: userIcon }).addTo(mymap);
        // current_position = L.marker(e.latlng, { icon: userIcon }).addTo(mymap)
        //     .bindPopup("You are within " + radius + " meters from this point").openPopup();

        // current_accuracy = L.circle(e.latlng, radius).addTo(mymap);
    }

    function onLocationError(e) {
        if (e.message != null) {
            if (e.message == "Geolocation error: Timeout expired.") {
                console.log(e.message);
            } else {
                alert(e.message);
            }
        }

    }

    mymap.on('locationfound', onLocationFound);
    mymap.on('locationerror', onLocationError);

    // wrap map.locate in a function    
    function locate() {
        mymap.locate({ setView: false, maxZoom: 16 });
    }


    var lat;
    var lng;
    var routing;
    var clickMarker = false;
    var morcyc = JSON.parse('<%- JSON.stringify(morcyc) %>');
    // console.log(morcyc);
    // locate();
    setInterval(function () {
        locate();
    }, 1000);
    for (var i = 0; i < morcyc.length; i++) {
        var lat = parseFloat(morcyc[i]['latlng']['lat']);
        var lng = parseFloat(morcyc[i]['latlng']['lng']);
        var name = morcyc[i]['plate'];
        var m1 = L.marker([lat, lng], { icon: greenIcon }).addTo(mymap).bindPopup(name).on('click',function(){
            
        });
        console.log("plate: " + name + " " + setArea.contains(m1.getLatLng()));
    }




    function onMapClick(e) {
        lat = e.latlng.lat;
        lng = e.latlng.lng;
        console.log(lat + "," + lng);
    }
    mymap.on('click', onMapClick);
    mymap.on('measurefinish', function (evt) {
        console.log(evt);
        writeResults(evt);
    });
    function writeResults(results) {
        console.log(results);
        area = results.points;
        // console.log(area.length);
        var sizeArea = area.length;
        if (sizeArea > 2) {
            for (var i = 0; i < sizeArea; i++) {
                arrayArea[i] = [area[i]['lat'], area[i]['lng']];
            }
            console.log(arrayArea);

            mymap.removeLayer(setArea);
            var $zone = arrayArea;
            setArea = L.polygon(arrayArea).addTo(mymap);
            setArea.setStyle({ "fillOpacity": 0, color: 'red' });
            $.ajax({
                type: 'POST',
                url: '/admin/setZone',
                data: {
                    '_token': $('input[name=_token]').val(),
                    zone: $zone,
                    size: sizeArea
                },
                success: function (data) {
                    if (data == true) { // if true (1)
                        swal("set area complete");
                        setTimeout(function () {// wait for 1 secs(2)
                            location.reload(); // then reload the page.(3)
                        }, 5000);
                    }
                }
            });
        }else{
            swal("it's not area, you must add point more than 2 points");
        }

    }



</script>